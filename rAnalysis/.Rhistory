pkgs <- c("RCurl","jsonlite")
for (pkg in pkgs) {
if (! (pkg %in% rownames(installed.packages()))) { install.packages(pkg) }
}
install.packages("h2o", type="source", repos="http://h2o-release.s3.amazonaws.com/h2o/rel-wheeler/4/R")
install.packages("curl")
install.packages("curl")
install.packages("libcurl4-openssl-dev")
install.packages("curl")
install.packages("h2o", type="source", repos="http://h2o-release.s3.amazonaws.com/h2o/rel-wheeler/4/R")
install.packages("RCurl")
install.packages("h2o", type="source", repos="http://h2o-release.s3.amazonaws.com/h2o/rel-wheeler/4/R")
library(h2o)
h2o.init()
setwd('/media/empro/5C02C2EB02C2C8EA/Ubuntu/Fendler/ovaryAnalysis/rAnalysis')
Data <- read_sav("~/Documents/HR/research/ovaryAnalysis/spAn/data.sav")
import(heaven)
library(heaven)
library(haven)
Data <- read_sav("~/Documents/HR/research/ovaryAnalysis/spAn/data.sav")
library(haven)
Data <- read_sav("/media/empro/5C02C2EB02C2C8EA/Ubuntu/Fendler/ovaryAnalysis/spAn/data.sav")
View(Data)
data <- data[, !c(1)]
data <- data[-c(1)]
Data <- data[-c(1)]
Data <- Data[-c(1)]
View(data)
Data <- Data[-c(1)]
View(Data)
Labels <- Data[c(1)]
Data <- Data[-c(1)]
cor(Data, method = 'spearman')
corMatrix <- cor(Data, method = 'spearman')
heatm <- heatmap(corMatrix)
heatm <- heatmap(corMatrix, Rowv = NA, Colv = NA)
heatm <- heatmap(corMatrix)
#heatm <- heatmap(corMatrix)
heatm <- heatmap(corMatrix. Rowv = NA, Colv = NA)
#heatm <- heatmap(corMatrix)
heatm <- heatmap(corMatrix, Rowv = NA, Colv = NA)
source('/media/empro/5C02C2EB02C2C8EA/Ubuntu/Fendler/ovaryAnalysis/rAnalysis/dataManip.R')
View(Labels)
View(Labels)
toM <- setDT(Data, key=Labels)['can']
library(data.table)
View(Labels)
toM <- setDT(Data, key=Labels)['can']
View(Labels)
toM <- setDT(Data, key=Labels)['can']
toM <- setDT(Data, key=Labels[1])['can']
toM <- setDT(Data, key=Labels[1])['can']
toM <- setDT(Data, key=Labels[0])['can']
toM <- setDT(Data, key=Labels)['can']
toM <- setDT(Data, key=Labels)['can']
toM <- Data[Labels[1] == 'can']
toM <- Data[Labels == 'can']
toM <- subset(Data, Labels$@2group == 'can')
toM <- subset(Data, Labels$2group == 'can')
toM <- subset(Data, Labels$'2group' == 'can')
#toM <- setDT(Data, key=Labels)['can']
toM <- subset(Data, Labels$'@2group' == 'can')
#toM <- setDT(Data, key=Labels)['can']
toM <- subset(Data, Labels$'@2group' == 'can')
view(toM)
toM <- subset(Data, Labels$'@2group' == 'can')
View(toM)
#toM <- setDT(Data, key=Labels)['can']
median(toM)
median(toM[1])
median(Data)
median(as.numeric(as.vector(toM)))
median(as.numeric(as.vector(toM[1])))
for(col in toM)
{
median(as.numeric(as.vector(i)))
}
for(col in toM)
{
median(as.numeric(as.vector(col)))
}
for(col in toM)
{
print(median(as.numeric(as.vector(col))) )
}
for(col in toM)
{
median(as.numeric(as.vector(col)))
colnames(toM)
}
for(col in toM)
{
median(as.numeric(as.vector(col)))
print(colnames(col) )
}
for(col in toM)
{
median(as.numeric(as.vector(col)))
#print(colnames(col) )
View(col)
}
for(col in toM)
{
median(as.numeric(as.vector(col)))
#print(colnames(col) )
View(col[0])
}
for(col in toM)
{
median(as.numeric(as.vector(col)))
#print(colnames(col) )
print(col[0])
}
for(col in toM)
{
median(as.numeric(as.vector(col)))
#print(colnames(col) )
print(col[1])
}
for(col in toM)
{
median(as.numeric(as.vector(col)))
#print(colnames(col) )
print(colnames(col))
}
print(colnames(Data))
for(col in toM)
{
median(as.numeric(as.vector(col)))
#print(colnames(col) )
print(colnames(col))
}
print(colnames(Data[2]))
for(col in toM)
{
median(as.numeric(as.vector(col)))
#print(colnames(col) )
print(colnames(col))
}
print(colnames(Data[2]))
for(col in toM)
{
median(as.numeric(as.vector(col)))
#print(colnames(col) )
print(colnames(col))
}
print(colnames(Data[, 2]))
for(col in toM)
{
median(as.numeric(as.vector(col)))
#print(colnames(col) )
print(colnames(col))
}
print(colnames(Data[, 2]))
for(i in 1:ncol(Data))
{
median(as.numeric(as.vector(Data[, i])))
#print(colnames(col) )
print(colnames(col))
}
print(colnames(Data[, 2]))
for(i in 1:ncol(Data))
{
median(as.numeric(as.vector(Data[, get(i)])))
#print(colnames(col) )
print(colnames(col))
}
print(colnames(Data[, 2]))
for(i in 1:ncol(Data))
{
median(as.numeric(as.vector(Data[, $i])))
print(colnames(Data[, 2]))
for(i in 1:ncol(Data))
{
median(as.numeric(as.vector(Data[, i])))
#print(colnames(col) )
print(colnames(col))
}
print(colnames(Data[, 2]))
for(i in 1:ncol(Data))
{
median(as.numeric(as.vector(Data[, i])))
#print(colnames(col) )
print(colnames(col))
}
print(colnames(Data[, 2]))
for(i in 1:ncol(Data))
{
median(as.numeric(as.vector(Data[, i])))
#print(colnames(col) )
print(colnames(col))
}
print(colnames(Data[, 2]))
for(i in 1:ncol(Data))
{
median(as.numeric(as.vector(Data[, c(i)])))
#print(colnames(col) )
print(colnames(col))
}
print(colnames(Data[, 2]))
for(i in 1:ncol(Data))
{
median(as.numeric(as.vector(Data[, c(i)])))
#print(colnames(col) )
print(colnames(col[i]))
}
print(colnames(Data[, 2]))
for(i in 1:ncol(Data))
{
median(as.numeric(as.vector(Data[, c(i)])))
#print(colnames(col) )
columns(toM)[i]
}
print(colnames(Data[, 2]))
for(i in 1:ncol(Data))
{
median(as.numeric(as.vector(Data[, c(i)])))
#print(colnames(col) )
colnames(toM)[i]
}
print(colnames(Data[, 2]))
for(i in 1:ncol(Data))
{
median(as.numeric(as.vector(Data[, c(i)])))
#print(colnames(col) )
print(colnames(toM)[i] )
}
print(colnames(Data[, 2]))
for(i in 1:ncol(Data))
{
med = median(as.numeric(as.vector(Data[, c(i)])))
#print(colnames(col) )
print(colnames(toM)[i], " ", med )
}
print(colnames(Data[, 2]))
for(i in 1:ncol(Data))
{
med <- median(as.numeric(as.vector(Data[, c(i)])))
#print(colnames(col) )
print(colnames(toM)[i], " ", med )
}
print(colnames(Data[, 2]))
for(i in 1:ncol(Data))
{
med <- median(as.numeric(as.vector(Data[, c(i)])))
#print(colnames(col) )
print(colnames(toM)[i])
print(med)
}
for(i in 1:ncol(Data))
{
med <- median(as.numeric(as.vector(Data[, c(i)])))
#print(colnames(col) )
print(colnames(toM)[i])
print(med)
}
for(i in 1:ncol(Data))
{
print(median(as.numeric(as.vector(Data[, c(i)]))) )
#print(colnames(col) )
print(colnames(toM)[i])
print(med)
}
for(i in 1:ncol(Data))
{
print(median(as.numeric(as.vector(toM[, c(i)]))) )
#print(colnames(col) )
print(colnames(toM)[i])
}
for(i in 1:ncol(Data))
{
print(median(as.numeric(as.vector(toM[, c(i)]))) )
#print(colnames(col) )
#print(colnames(toM)[i])
}
print(colnames(Data[, 2]))
for(i in 1:ncol(Data))
{
median(as.numeric(as.vector(Data[, c(i)])))
#print(colnames(col) )
}
print(colnames(Data[, 2]))
for(i in 1:ncol(Data))
{
print(median(as.numeric(as.vector(Data[, c(i)]))) )
#print(colnames(col) )
}
print(colnames(Data[, 2]))
for(i in 1:ncol(Data))
{
median(toM[, c(i)])
print(median(as.numeric(as.vector(Data[, c(i)]))) )
#print(colnames(col) )
}
print(colnames(Data[, 2]))
for(i in 1:ncol(Data))
{
print(median(toM[, c(i)]) )
print(median(as.numeric(as.vector(Data[, c(i)]))) )
#print(colnames(col) )
}
print(colnames(Data[, 2]))
for(i in 1:ncol(Data))
{
print(median(toM[, i]) )
print(median(as.numeric(as.vector(Data[, c(i)]))) )
#print(colnames(col) )
}
print(colnames(Data[, 2]))
for(i in 1:ncol(Data))
{
print(median(toM[c(i)]) )
print(median(as.numeric(as.vector(Data[, c(i)]))) )
#print(colnames(col) )
}
print(colnames(Data[, 2]))
for(i in 1:ncol(Data))
{
print(median(toM[c(i)]) )
print(median(as.numeric(as.vector(to[c(i)]))) )
#print(colnames(col) )
}
print(colnames(Data[, 2]))
for(i in 1:ncol(Data))
{
print(median(toM[c(i)]) )
print(median(as.numeric(as.vector(toM[c(i)]))) )
#print(colnames(col) )
}
print(colnames(Data[, 2]))
for(i in 1:ncol(Data))
{
#print(median(toM[c(i)]) )
print(median(as.numeric(as.vector(toM[c(i)]))) )
#print(colnames(col) )
}
print(colnames(Data[, 2]))
for(i in 1:ncol(toM))
{
#print(median(toM[c(i)]) )
print(median(as.numeric(as.vector(toM[c(i)]))) )
#print(colnames(col) )
}
library(haven)
Data <- read_csv("/media/empro/5C02C2EB02C2C8EA/Ubuntu/Fendler/ovaryAnalysis/processed.csv")
processed <- read.csv("/media/empro/5C02C2EB02C2C8EA/Ubuntu/Fendler/ovaryAnalysis/processed.csv")
View(processed)
library(haven)
Data <- read.csv("/media/empro/5C02C2EB02C2C8EA/Ubuntu/Fendler/ovaryAnalysis/processed.csv", header = TRUE)
View(Data)
Labels <- Data[c(1)]
Data <- Data[-c(1)]
corMatrix <- cor(Data, method = 'spearman')
#heatm <- heatmap(corMatrix)
heatm <- heatmap(corMatrix, Rowv = NA, Colv = NA)
library(data.table)
toM <- subset(Data, Labels$'@2group' == 'can')
View(toM)
#toM <- setDT(Data, key=Labels)['can']
print(colnames(Data[, 2]))
for(i in 1:ncol(toM))
{
#print(median(toM[c(i)]) )
print(median(as.numeric(as.vector(toM[c(i)]))) )
#print(colnames(col) )
}
print(colnames(Data[, 2]))
for(i in 1:ncol(toM))
{
print(median(toM[c(i)]) )
#print(median(as.numeric(as.vector(toM[c(i)]))) )
#print(colnames(col) )
}
print(colnames(Data[, 2]))
for(i in 1:ncol(toM))
{
print(median(toM[c(i)]) )
#print(median(as.numeric(as.vector(toM[c(i)]))) )
#print(colnames(col) )
}
library(haven)
Data <- read.csv("/media/empro/5C02C2EB02C2C8EA/Ubuntu/Fendler/ovaryAnalysis/processed.csv", header = TRUE)
#View(Data)
Labels <- Data[c(1)]
Data <- Data[-c(1)]
corMatrix <- cor(Data, method = 'spearman')
#heatm <- heatmap(corMatrix)
heatm <- heatmap(corMatrix, Rowv = NA, Colv = NA)
library(data.table)
library(data.table)
View(Labels)
toM <- subset(Data, Labels$'X2group' == 'can')
View(toM)
#toM <- setDT(Data, key=Labels)['can']
toM <- subset(Data, Labels[c(1)] == 'can')
View(toM)
#toM <- setDT(Data, key=Labels)['can']
print(colnames(Data[, 2]))
for(i in 1:ncol(toM))
{
print(median(toM[c(i)]) )
#print(median(as.numeric(as.vector(toM[c(i)]))) )
#print(colnames(col) )
}
for(i in 1:ncol(toM))
{
print(median(toM[c(i)]) )
#print(median(as.numeric(as.vector(toM[c(i)]))) )
#print(colnames(col) )
}
for(i in 1:ncol(toM))
{
View(toM[c(i)])
print(median(toM[c(i)]) )
#print(median(as.numeric(as.vector(toM[c(i)]))) )
#print(colnames(col) )
}
for(i in 1:ncol(toM))
{
View(toM[, c(i)])
print(median(toM[c(i)]) )
#print(median(as.numeric(as.vector(toM[c(i)]))) )
#print(colnames(col) )
}
for(i in 1:ncol(toM))
{
View(toM[, c(i)])
print(median(toM[, i]) )
#print(median(as.numeric(as.vector(toM[c(i)]))) )
#print(colnames(col) )
}
for(i in 1:ncol(toM))
{
View(toM[, c(i)])
print(median(toM[, i]) )
#print(median(as.numeric(as.vector(toM[c(i)]))) )
print(colnames(toM)[i] )
}
for(i in 1:ncol(toM))
{
print(median(toM[, i]) )
#print(median(as.numeric(as.vector(toM[c(i)]))) )
print(colnames(toM)[i] )
}
for(i in 1:ncol(toM))
{
print(median(toM[, i]) )
#print(median(as.numeric(as.vector(toM[c(i)]))) )
print(colnames(toM)[i] )
print(wilcox.test(tom[, i] ~ Labels[, 1]))
}
for(i in 1:ncol(toM))
{
print(median(toM[, i]) )
#print(median(as.numeric(as.vector(toM[c(i)]))) )
print(colnames(toM)[i] )
print(wilcox.test(Data[, i] ~ Labels[, 1]))
}
for(i in 1:ncol(toM))
{
print(median(toM[, i]) )
#print(median(as.numeric(as.vector(toM[c(i)]))) )
print(colnames(toM)[i] )
print(wilcox.test(Data[, i] ~ Labels[, 1]).p.value)
for(i in 1:ncol(toM))
{
print(median(toM[, i]) )
#print(median(as.numeric(as.vector(toM[c(i)]))) )
print(colnames(toM)[i] )
print(wilcox.test(Data[, i] ~ Labels[, 1])$p.value)
}
for(i in 1:ncol(toM))
{
print(median(toM[, i]) )
#print(median(as.numeric(as.vector(toM[c(i)]))) )
print(colnames(toM)[i] )
print(wilcox.test(Data[, i] ~ Labels[, 1]))
}
show(Labels)
show(Labels[, 1])
View(Labels[, 1])
View(Labels[, 1])
View(Data)
library(haven)
Data <- read.csv("/media/empro/5C02C2EB02C2C8EA/Ubuntu/Fendler/ovaryAnalysis/processed.csv", header = TRUE)
library(haven)
Data <- read.csv("/media/empro/5C02C2EB02C2C8EA/Ubuntu/Fendler/ovaryAnalysis/processed.csv", header = TRUE)
dws
setwd("/media/empro/5C02C2EB02C2C8EA/Ubuntu/Fendler/ovaryAnalysis/rAnalysis")
library(haven)
Data <- read.csv("/media/empro/5C02C2EB02C2C8EA/Ubuntu/Fendler/ovaryAnalysis/processed.csv", header = TRUE)
