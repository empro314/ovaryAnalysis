pkgs <- c("RCurl","jsonlite")
for (pkg in pkgs) {
if (! (pkg %in% rownames(installed.packages()))) { install.packages(pkg) }
}
install.packages("h2o", type="source", repos="http://h2o-release.s3.amazonaws.com/h2o/rel-wheeler/4/R")
install.packages("curl")
install.packages("curl")
install.packages("libcurl4-openssl-dev")
install.packages("curl")
install.packages("h2o", type="source", repos="http://h2o-release.s3.amazonaws.com/h2o/rel-wheeler/4/R")
install.packages("RCurl")
install.packages("h2o", type="source", repos="http://h2o-release.s3.amazonaws.com/h2o/rel-wheeler/4/R")
library(h2o)
h2o.init()
setwd('/media/empro/5C02C2EB02C2C8EA/Ubuntu/Fendler/ovaryAnalysis/rAnalysis')
library(haven)
Data <- read.csv("/media/empro/5C02C2EB02C2C8EA/Ubuntu/Fendler/ovaryAnalysis/processed.csv", header = TRUE)
#View(Data)
Labels <- Data[c(1)]
Data <- Data[-c(1)]
corMatrix <- cor(Data, method = 'spearman')
#heatm <- heatmap(corMatrix)
heatm <- heatmap(corMatrix, Rowv = NA, Colv = NA)
library(data.table)
View(Labels)
toM <- subset(Data, Labels[c(1)] == 'can')
#View(toM)
#toM <- setDT(Data, key=Labels)['can']
names <- c()
meds <- c()
ps <- c()
for(i in 1:ncol(toM))
{
med = median(toM[, i])
#print(median(as.numeric(as.vector(toM[c(i)]))) )
name = colnames(toM)[i]
p = wilcox.test(Data[, i] ~ Labels[, 1])$p.value
#cat("Nazwa: ", name, "  mediana: ", med, "  p: ", p, "\n")
names <- c(names, name)
meds <- c(meds, med)
ps <- c(ps, p)
}
meds <- log2(meds)
volData = data.frame(names, meds, ps)
#View(head(volData, n=10) )
volData <- volData[order(volData$ps),]
View(head(volData, n=10) )
#meds <- log2(meds)
volData = data.frame(names, meds, ps)
#View(head(volData, n=10) )
volData <- volData[order(volData$ps),]
View(head(volData, n=10) )
names <- c()
meds <- c()
ps <- c()
for(i in 1:ncol(toM))
{
med = median(toM[, i])
#print(median(as.numeric(as.vector(toM[c(i)]))) )
name = colnames(toM)[i]
p = wilcox.test(Data[, i] ~ Labels[, 1])$p.value
#cat("Nazwa: ", name, "  mediana: ", med, "  p: ", p, "\n")
names <- c(names, name)
meds <- c(meds, med)
ps <- c(ps, p)
}
#meds <- log2(meds)
volData = data.frame(names, meds, ps)
#View(head(volData, n=10) )
volData <- volData[order(volData$ps),]
View(head(volData, n=10) )
bh = c()
for(i in 1:nrow(volData))
{
#akt = volData[i, 'ps'] * 0.05 / nrow((volData))
akt = p.adjust(volData$ps, method = 'fdr')
bh <- c(bh , akt)
}
#View(head(bh, n=10))
volData <- data.frame(volData, bh)
View(head(volData, n=10))
library(dplyr)
library(ggplot2)
drawRes = mutate(volData, sig=ifelse(volData$bh < 0.05, 'FDR<0.05', 'Not Sig'))
volPlo = ggplot(drawRes, aes(meds, -log10(ps))) + geom_point(aes(col=sig)) + scale_color_manual(values = c('red', 'black'))
volPlo <- volPlo + geom_text(data=filter(drawRes, bh<0.05), aes(label=names))
volPlo
drawRes = mutate(volData, sig=ifelse(volData$bh < 0.05, 'FDR<0.05', 'Not Sig'))
volPlo = ggplot(drawRes, aes(meds, -log10(ps))) + geom_point(aes(col=sig)) + scale_color_manual(values = c('red', 'black'))
volPlo <- volPlo + geom_text(data=filter(drawRes, bh<0.05), aes(label=names))
volPlo <- volPlo + scale_x_continuous(limits = c(-2, 2))
volPlo
drawRes = mutate(volData, sig=ifelse(volData$bh < 0.05, 'FDR<0.05', 'Not Sig'))
volPlo = ggplot(drawRes, aes(meds, -log10(ps))) + geom_point(aes(col=sig)) + scale_color_manual(values = c('red', 'black'))
volPlo <- volPlo + geom_text(data=filter(drawRes, bh<0.05), aes(label=names))
volPlo <- volPlo + scale_x_continuous(limits = c(-1, 1))
volPlo
View(volData)
drawRes = mutate(volData, sig=ifelse(volData$bh < 0.05, 'FDR<0.05', 'Not Sig'))
volPlo = ggplot(drawRes, aes(meds, -log10(ps))) + geom_point(aes(col=sig)) + scale_color_manual(values = c('red', 'black'))
volPlo <- volPlo + geom_text(data=filter(drawRes, bh<0.05), aes(label=names))
volPlo <- volPlo + scale_x_continuous(limits = c(-1, 1))
volPlo
library(ggplot)
library(ggplot2)
library(ggplot2)
ggplot(Data) + geom_density(alpha=0.2)
library(ggplot2)
hist(Data)
library(ggplot2)
for(colmn in Data)
{
hist(colmn)
}
install.packages('ggbiplot')
drawRes = mutate(volData, sig=ifelse(volData$bh < 0.05, 'FDR<0.05', 'Not Sig'))
volPlo = ggplot(drawRes, aes(meds, -log10(ps))) + geom_point(aes(col=sig)) + scale_color_manual(values = c('red', 'black'))
volPlo <- volPlo + geom_text(data=filter(drawRes, bh<0.05), aes(label=names))
volPlo <- volPlo + scale_x_continuous(limits = c(-2, 2))
volPlo
drawRes = mutate(volData, sig=ifelse(volData$bh < 0.05, 'FDR<0.05', 'Not Sig'))
volPlo = ggplot(drawRes, aes(meds, -log10(ps))) + geom_point(aes(col=sig)) + scale_color_manual(values = c('red', 'black'))
#volPlo <- volPlo + geom_text(data=filter(drawRes, bh<0.05), aes(label=names))
volPlo <- volPlo + scale_x_continuous(limits = c(-2, 2))
volPlo
bh = p.adjust(volData$ps, method = 'fdr')
#View(head(bh, n=10))
volData <- data.frame(volData, bh)
View(head(volData, n=10))
bh = p.adjust(volData$ps, method = 'fdr')
#View(head(bh, n=10))
volData <- data.frame(volData, bh)
View(head(volData, n=10))
volData <- data.frame(volData, bh)
View(head(volData, n=10))
drawRes = mutate(volData, sig=ifelse(volData$bh < 0.05, 'FDR<0.05', 'Not Sig'))
volPlo = ggplot(drawRes, aes(meds, -log10(ps))) + geom_point(aes(col=sig)) + scale_color_manual(values = c('red', 'black'))
#0volPlo <- volPlo + geom_text(data=filter(drawRes, bh<0.05), aes(label=names))
volPlo <- volPlo + scale_x_continuous(limits = c(-2, 2))
volPlo
